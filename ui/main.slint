// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { Button, Slider, GroupBox, HorizontalBox, VerticalBox, GridBox } from "std-widgets.slint";

export component App inherits Window {
    in property <image> texture <=> image.source;
    in property <float> video-duration;
    in-out property <float> video-position <=> seeker.value;
    out property <int> requested-texture-width: image.width/1phx;
    out property <int> requested-texture-height: image.height/1phx;

    callback toggle-pause();
    callback seek(float);

    preferred-width: 500px;
    preferred-height: 600px;
    title: "Slint OpenGL Texture Example";

    VerticalBox {
        Text {
            text: "This text is rendered using Slint. The rotating cube below is rendered into an OpenGL texture.";
            wrap: word-wrap;
        }

        image := Image {
            preferred-width: 640px;
            preferred-height: 640px;
            min-width: 64px;
            min-height: 64px;
            width: 100%;
            //height: 100%;
        }

        GroupBox {
            title: "Video Controls";

            GridBox {
                Row {
                    Text {
                        text: "Duration:";
                        vertical-alignment: center;
                    }

                    seeker := Slider {
                        minimum: 0.0;
                        maximum: video-duration;
                        // it's not specified if this is emitted on being
                        // changed as binding, but it seems it's only changed
                        // from user interaction, which is what I want.
                        changed => { seek(video-position) }
                    }
                }
                Row {
                    Button {
                        text: "Pause/Play";
                        clicked => { toggle-pause() }
                    }
                }
            }
        }
    }
}
